{"version":3,"file":"index.cjs.js","sources":["../node_modules/jsbi/dist/jsbi.mjs","../src/constants.ts","../src/addresses.ts","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@ethersproject/keccak256/lib.esm/index.js","../node_modules/@ethersproject/address/lib.esm/_version.js","../node_modules/@ethersproject/address/lib.esm/index.js","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../node_modules/big.js/big.mjs","../node_modules/toformat/toFormat.js","../node_modules/decimal.js-light/decimal.mjs","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../node_modules/@ethersproject/strings/lib.esm/_version.js","../node_modules/@ethersproject/strings/lib.esm/utf8.js","../node_modules/@ethersproject/solidity/lib.esm/_version.js","../node_modules/@ethersproject/solidity/lib.esm/index.js","../src/errors.ts","../src/utils/sqrt.ts","../src/entities/pair.ts","../src/entities/route.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts","../src/entities/trade.ts","../src/entities/wmatic.ts","../src/router.ts"],"sourcesContent":["class JSBI extends Array{constructor(i,_){if(super(i),this.sign=_,Object.setPrototypeOf(this,JSBI.prototype),i>JSBI.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Math.floor,t=Number.isFinite;if(\"number\"==typeof i){if(0===i)return JSBI.__zero();if(JSBI.__isOneDigitInt(i))return 0>i?JSBI.__oneDigit(-i,!0):JSBI.__oneDigit(i,!1);if(!t(i)||_(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return JSBI.__fromDouble(i)}if(\"string\"==typeof i){const _=JSBI.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?JSBI.__oneDigit(1,!1):JSBI.__zero();if(\"object\"==typeof i){if(i.constructor===JSBI)return i;const _=JSBI.__toPrimitive(i);return JSBI.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?JSBI.__toStringBasePowerOfTwo(this,i):JSBI.__toStringGeneric(this,i,!1)}valueOf(){throw new Error(\"Convert JSBI instances to native numbers using `toNumber`.\")}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=JSBI.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,o=t,s=_-1;const l=e+3;let r=32===l?0:o<<l;r>>>=12;const a=l-12;let u=12<=l?0:o<<20+l,d=20+l;for(0<a&&0<s&&(s--,o=i.__digit(s),r|=o>>>30-a,u=o<<a+2,d=a+2);0<d&&0<s;)s--,o=i.__digit(s),u|=30<=d?o<<d-30:o>>>30-d,d-=30;const h=JSBI.__decideRounding(i,d,s,o);if((1===h||0===h&&1==(1&u))&&(u=u+1>>>0,0===u&&(r++,0!=r>>>20&&(r=0,g++,1023<g))))return i.sign?-Infinity:1/0;const m=i.sign?-2147483648:0;return g=g+1023<<20,JSBI.__kBitConversionInts[1]=m|g|r,JSBI.__kBitConversionInts[0]=u,JSBI.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?JSBI.__absoluteSubOne(i).__trim():JSBI.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return JSBI.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?JSBI.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=JSBI.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new JSBI(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=JSBI.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=JSBI.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new JSBI(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)JSBI.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>JSBI.__absoluteCompare(i,_))return JSBI.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:JSBI.unaryMinus(i);n=JSBI.__absoluteDivSmall(i,e,null)}else n=JSBI.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>JSBI.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return JSBI.__zero();const _=JSBI.__absoluteModSmall(i,t);return 0===_?JSBI.__zero():JSBI.__oneDigit(_,i.sign)}const e=JSBI.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?JSBI.__absoluteAdd(i,_,t):0<=JSBI.__absoluteCompare(i,_)?JSBI.__absoluteSub(i,_,t):JSBI.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=JSBI.__absoluteCompare(i,_)?JSBI.__absoluteSub(i,_,t):JSBI.__absoluteSub(_,i,!t):JSBI.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?JSBI.__rightShiftByAbsolute(i,_):JSBI.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?JSBI.__leftShiftByAbsolute(i,_):JSBI.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>JSBI.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=JSBI.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<JSBI.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=JSBI.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!JSBI.equal(i,_)}static bitwiseAnd(i,_){var t=Math.max;if(!i.sign&&!_.sign)return JSBI.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const e=t(i.length,_.length)+1;let n=JSBI.__absoluteSubOne(i,e);const g=JSBI.__absoluteSubOne(_);return n=JSBI.__absoluteOr(n,g,n),JSBI.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),JSBI.__absoluteAndNot(i,JSBI.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){var t=Math.max;if(!i.sign&&!_.sign)return JSBI.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const e=t(i.length,_.length),n=JSBI.__absoluteSubOne(i,e),g=JSBI.__absoluteSubOne(_);return JSBI.__absoluteXor(n,g,n).__trim()}const e=t(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=JSBI.__absoluteSubOne(_,e);return n=JSBI.__absoluteXor(n,i,n),JSBI.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){var t=Math.max;const e=t(i.length,_.length);if(!i.sign&&!_.sign)return JSBI.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let t=JSBI.__absoluteSubOne(i,e);const n=JSBI.__absoluteSubOne(_);return t=JSBI.__absoluteAnd(t,n,t),JSBI.__absoluteAddOne(t,!0,t).__trim()}i.sign&&([i,_]=[_,i]);let n=JSBI.__absoluteSubOne(_,e);return n=JSBI.__absoluteAndNot(n,i,n),JSBI.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){var i=Math.floor;if(0===t.length)return t;if(_=i(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return JSBI.__zero();if(_>=JSBI.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const g=t.__unsignedDigit(e-1),o=1<<(_-1)%30;if(t.length===e&&g<o)return t;if(!((g&o)===o))return JSBI.__truncateToNBits(_,t);if(!t.sign)return JSBI.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(g&o-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return JSBI.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&g===o?t:JSBI.__truncateToNBits(_,t)}return JSBI.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){var t=Math.floor;if(0===_.length)return _;if(i=t(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return JSBI.__zero();if(_.sign){if(i>JSBI.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return JSBI.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=JSBI.__kMaxLengthBits)return _;const e=0|(i+29)/30;if(_.length<e)return _;const g=i%30;if(_.length==e){if(0===g)return _;const i=_.__digit(e-1);if(0==i>>>g)return _}return JSBI.__truncateToNBits(i,_)}static ADD(i,_){if(i=JSBI.__toPrimitive(i),_=JSBI.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=JSBI.__toNumeric(i),_=JSBI.__toNumeric(_),JSBI.__isBigInt(i)&&JSBI.__isBigInt(_))return JSBI.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return JSBI.__compare(i,_,0)}static LE(i,_){return JSBI.__compare(i,_,1)}static GT(i,_){return JSBI.__compare(i,_,2)}static GE(i,_){return JSBI.__compare(i,_,3)}static EQ(i,_){for(;;){if(JSBI.__isBigInt(i))return JSBI.__isBigInt(_)?JSBI.equal(i,_):JSBI.EQ(_,i);if(\"number\"==typeof i){if(JSBI.__isBigInt(_))return JSBI.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=JSBI.__toPrimitive(_)}else if(\"string\"==typeof i){if(JSBI.__isBigInt(_))return i=JSBI.__fromString(i),null!==i&&JSBI.equal(i,_);if(\"object\"!=typeof _)return i==_;_=JSBI.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(JSBI.__isBigInt(_))return JSBI.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=JSBI.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(JSBI.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=JSBI.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==JSBI)return i==_;i=JSBI.__toPrimitive(i)}else return i==_}}static NE(i,_){return!JSBI.EQ(i,_)}static __zero(){return new JSBI(0,!1)}static __oneDigit(i,_){const t=new JSBI(1,_);return t.__setDigit(0,i),t}__copy(){const _=new JSBI(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){JSBI.__kBitConversionDouble[0]=i;const _=2047&JSBI.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new JSBI(e,0>i);let g=1048575&JSBI.__kBitConversionInts[1]|1048576,o=JSBI.__kBitConversionInts[0];const s=20,l=t%30;let r,a=0;if(l<20){const i=s-l;a=i+32,r=g>>>i,g=g<<32-i|o>>>i,o<<=32-i}else if(l===20)a=32,r=g,g=o,o=0;else{const i=l-s;a=32-i,r=g<<i|o>>>32-i,g=o<<i,o=0}n.__setDigit(e-1,r);for(let _=e-2;0<=_;_--)0<a?(a-=30,r=g>>>2,g=g<<30|o>>>2,o<<=30):r=0,n.__setDigit(_,r);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return JSBI.__zero();let g=i.charCodeAt(n);for(;JSBI.__isWhitespace(g);){if(++n===e)return JSBI.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return JSBI.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return JSBI.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return JSBI.__zero();g=i.charCodeAt(n)}const o=e-n;let s=JSBI.__kMaxBitsPerChar[_],l=JSBI.__kBitsPerCharTableMultiplier-1;if(o>1073741824/s)return null;const r=s*o+l>>>JSBI.__kBitsPerCharTableShift,a=new JSBI(0|(r+29)/30,!1),u=10>_?_:10,h=10<_?_-10:0;if(0==(_&_-1)){s>>=JSBI.__kBitsPerCharTableShift;const _=[],t=[];let o=!1;do{let l=0,r=0;for(;;){let _;if(g-48>>>0<u)_=g-48;else if((32|g)-97>>>0<h)_=(32|g)-87;else{o=!0;break}if(r+=s,l=l<<s|_,++n===e){o=!0;break}if(g=i.charCodeAt(n),30<r+s)break}_.push(l),t.push(r)}while(!o);JSBI.__fillFromParts(a,_,t)}else{a.__initializeDigits();let t=!1,o=0;do{let r=0,b=1;for(;;){let s;if(g-48>>>0<u)s=g-48;else if((32|g)-97>>>0<h)s=(32|g)-87;else{t=!0;break}const l=b*_;if(1073741823<l)break;if(b=l,r=r*_+s,o++,++n===e){t=!0;break}g=i.charCodeAt(n)}l=30*JSBI.__kBitsPerCharTableMultiplier-1;const D=0|(s*o+l>>>JSBI.__kBitsPerCharTableShift)/30;a.__inplaceMultiplyAdd(b,r,D)}while(!t)}if(n!==e){if(!JSBI.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!JSBI.__isWhitespace(g))return null}return a.sign=-1==t,a.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,o=_.__digit(t-1),s=JSBI.__clz30(o);let l=0|(30*t-s+n-1)/n;if(_.sign&&l++,268435456<l)throw new Error(\"string too long\");const r=Array(l);let a=l-1,u=0,d=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(u|i<<d)&g;r[a--]=JSBI.__kConversionChars[t];const o=n-d;for(u=i>>>o,d=30-o;d>=n;)r[a--]=JSBI.__kConversionChars[u&g],u>>>=n,d-=n}const h=(u|o<<d)&g;for(r[a--]=JSBI.__kConversionChars[h],u=o>>>n-d;0!==u;)r[a--]=JSBI.__kConversionChars[u&g],u>>>=n;if(_.sign&&(r[a--]=\"-\"),-1!=a)throw new Error(\"implementation bug\");return r.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-JSBI.__clz30(_.__digit(e-1)),g=JSBI.__kMaxBitsPerChar[i],o=g-1;let s=n*JSBI.__kBitsPerCharTableMultiplier;s+=o-1,s=0|s/o;const l=s+1>>1,r=JSBI.exponentiate(JSBI.__oneDigit(i,!1),JSBI.__oneDigit(l,!1));let a,u;const d=r.__unsignedDigit(0);if(1===r.length&&32767>=d){a=new JSBI(_.length,!1),a.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);a.__setHalfDigit(e,0|i/d),t=0|i%d}u=t.toString(i)}else{const t=JSBI.__absoluteDivLarge(_,r,!0,!0);a=t.quotient;const e=t.remainder.__trim();u=JSBI.__toStringGeneric(e,i,!0)}a.__trim();let h=JSBI.__toStringGeneric(a,i,!0);for(;u.length<l;)u=\"0\"+u;return!1===t&&_.sign&&(h=\"-\"+h),h+u}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return JSBI.__unequalSign(t);const e=JSBI.__absoluteCompare(i,_);return 0<e?JSBI.__absoluteGreater(t):0>e?JSBI.__absoluteLess(t):0}static __compareToNumber(i,_){if(JSBI.__isOneDigitInt(_)){const t=i.sign,e=0>_;if(t!==e)return JSBI.__unequalSign(t);if(0===i.length){if(e)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return JSBI.__absoluteGreater(t);const n=Math.abs(_),g=i.__unsignedDigit(0);return g>n?JSBI.__absoluteGreater(t):g<n?JSBI.__absoluteLess(t):0}return JSBI.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return JSBI.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;JSBI.__kBitConversionDouble[0]=_;const e=2047&JSBI.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return JSBI.__absoluteGreater(t);const g=i.length;let o=i.__digit(g-1);const s=JSBI.__clz30(o),l=30*g-s,r=n+1;if(l<r)return JSBI.__absoluteLess(t);if(l>r)return JSBI.__absoluteGreater(t);let a=1048576|1048575&JSBI.__kBitConversionInts[1],u=JSBI.__kBitConversionInts[0];const d=20,h=29-s;if(h!==(0|(l-1)%30))throw new Error(\"implementation bug\");let m,b=0;if(20>h){const i=d-h;b=i+32,m=a>>>i,a=a<<32-i|u>>>i,u<<=32-i}else if(20===h)b=32,m=a,a=u,u=0;else{const i=h-d;b=32-i,m=a<<i|u>>>32-i,a=u<<i,u=0}if(o>>>=0,m>>>=0,o>m)return JSBI.__absoluteGreater(t);if(o<m)return JSBI.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<b?(b-=30,m=a>>>2,a=a<<30|u>>>2,u<<=30):m=0;const _=i.__unsignedDigit(e);if(_>m)return JSBI.__absoluteGreater(t);if(_<m)return JSBI.__absoluteLess(t)}if(0!==a||0!==u){if(0===b)throw new Error(\"implementation bug\");return JSBI.__absoluteLess(t)}return 0}static __equalToNumber(i,_){var t=Math.abs;return JSBI.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===JSBI.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=JSBI.__toPrimitive(i),_=JSBI.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(JSBI.__isBigInt(i)&&\"string\"==typeof _)return _=JSBI.__fromString(_),null!==_&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&JSBI.__isBigInt(_))return i=JSBI.__fromString(i),null!==i&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(i,_),t);if(i=JSBI.__toNumeric(i),_=JSBI.__toNumeric(_),JSBI.__isBigInt(i)){if(JSBI.__isBigInt(_))return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(JSBI.__isBigInt(_))return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return JSBI.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return JSBI.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:JSBI.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new JSBI(n,e);let o=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)+t.__digit(s)+o;o=i>>>30,g.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)+o;o=i>>>30,g.__setDigit(s,1073741823&i)}return s<g.length&&g.__setDigit(s,o),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:JSBI.unaryMinus(_);const n=new JSBI(_.length,e);let g=0,o=0;for(;o<t.length;o++){const i=_.__digit(o)-t.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}for(;o<_.length;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new JSBI(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new JSBI(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,o=g;if(n<g){o=n;const i=_,e=n;_=t,n=g,t=i,g=e}let s=o;null===e?e=new JSBI(s,!1):s=e.length;let l=0;for(;l<o;l++)e.__setDigit(l,_.__digit(l)&t.__digit(l));for(;l<s;l++)e.__setDigit(l,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let o=g;n<g&&(o=n);let s=n;null===e?e=new JSBI(s,!1):s=e.length;let l=0;for(;l<o;l++)e.__setDigit(l,_.__digit(l)&~t.__digit(l));for(;l<n;l++)e.__setDigit(l,_.__digit(l));for(;l<s;l++)e.__setDigit(l,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,o=g;if(n<g){o=n;const i=_,e=n;_=t,n=g,t=i,g=e}let s=n;null===e?e=new JSBI(s,!1):s=e.length;let l=0;for(;l<o;l++)e.__setDigit(l,_.__digit(l)|t.__digit(l));for(;l<n;l++)e.__setDigit(l,_.__digit(l));for(;l<s;l++)e.__setDigit(l,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,o=g;if(n<g){o=n;const i=_,e=n;_=t,n=g,t=i,g=e}let s=n;null===e?e=new JSBI(s,!1):s=e.length;let l=0;for(;l<o;l++)e.__setDigit(l,_.__digit(l)^t.__digit(l));for(;l<n;l++)e.__setDigit(l,_.__digit(l));for(;l<s;l++)e.__setDigit(l,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,o=t>>>15;let s=0,l=0;for(let r,a=0;a<_.length;a++,n++){r=e.__digit(n);const i=_.__digit(a),t=32767&i,u=i>>>15,d=JSBI.__imul(t,g),h=JSBI.__imul(t,o),m=JSBI.__imul(u,g),b=JSBI.__imul(u,o);r+=l+d+s,s=r>>>30,r&=1073741823,r+=((32767&h)<<15)+((32767&m)<<15),s+=r>>>30,l=b+(h>>>15)+(m>>>15),e.__setDigit(n,1073741823&r)}for(;0!=s||0!==l;n++){let i=e.__digit(n);i+=s+l,l=0,s=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,o){let s=e,l=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=JSBI.__imul(32767&i,t),g=JSBI.__imul(i>>>15,t),a=e+((32767&g)<<15)+l+s;s=a>>>30,l=g>>>15,o.__setDigit(n,1073741823&a)}if(o.length>g)for(o.__setDigit(g++,s+l);g<o.length;)o.__setDigit(g++,0);else if(0!==s+l)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,o=_;for(let s=0;s<t;s++){const i=this.__digit(s),_=32767&i,t=i>>>15,l=JSBI.__imul(_,e),r=JSBI.__imul(_,n),a=JSBI.__imul(t,e),u=JSBI.__imul(t,n);let d=o+l+g;g=d>>>30,d&=1073741823,d+=((32767&r)<<15)+((32767&a)<<15),g+=d>>>30,o=u+(r>>>15)+(a>>>15),this.__setDigit(s,1073741823&d)}if(0!=g||0!==o)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new JSBI(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,o=i.__halfDigitLength()-g;let s=null;t&&(s=new JSBI(o+2>>>1,!1),s.__initializeDigits());const l=new JSBI(g+2>>>1,!1);l.__initializeDigits();const r=JSBI.__clz15(_.__halfDigit(g-1));0<r&&(_=JSBI.__specialLeftShift(_,r,0));const a=JSBI.__specialLeftShift(i,r,1),u=_.__halfDigit(g-1);let d=0;for(let r,h=o;0<=h;h--){r=32767;const i=a.__halfDigit(h+g);if(i!==u){const t=(i<<15|a.__halfDigit(h+g-1))>>>0;r=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),o=a.__halfDigit(h+g-2);for(;JSBI.__imul(r,n)>>>0>(e<<16|o)>>>0&&(r--,e+=u,!(32767<e)););}JSBI.__internalMultiplyAdd(_,r,0,n,l);let e=a.__inplaceSub(l,h,g+1);0!==e&&(e=a.__inplaceAdd(_,h,g),a.__setHalfDigit(h+g,32767&a.__halfDigit(h+g)+e),r--),t&&(1&h?d=r<<15:s.__setDigit(h>>>1,d|r))}if(e)return a.__inplaceRightShift(r),t?{quotient:s,remainder:a}:a;if(t)return s;throw new Error(\"unreachable\")}static __clz15(i){return JSBI.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new JSBI(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let o=0;for(let s=0;s<g;s++){const i=_.__digit(s);n.__setDigit(s,1073741823&i<<t|o),o=i>>>30-t}return 0<e&&n.__setDigit(g,o),n}static __leftShiftByAbsolute(_,i){const t=JSBI.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,o=0!==n&&0!=_.__digit(g-1)>>>30-n,s=g+e+(o?1:0),l=new JSBI(s,_.sign);if(0===n){let t=0;for(;t<e;t++)l.__setDigit(t,0);for(;t<s;t++)l.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)l.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);l.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(o)l.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return l.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=JSBI.__toShiftAmount(i);if(0>n)return JSBI.__rightShiftByMaximum(e);const g=0|n/30,o=n%30;let s=t-g;if(0>=s)return JSBI.__rightShiftByMaximum(e);let l=!1;if(e){if(0!=(_.__digit(g)&(1<<o)-1))l=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){l=!0;break}}if(l&&0===o){const i=_.__digit(t-1);0==~i&&s++}let r=new JSBI(s,e);if(0===o){r.__setDigit(s-1,0);for(let e=g;e<t;e++)r.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>o;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);r.__setDigit(t,1073741823&i<<30-o|e),e=i>>>o}r.__setDigit(n,e)}return l&&(r=JSBI.__absoluteAddOne(r,!0,r)),r.__trim()}static __rightShiftByMaximum(i){return i?JSBI.__oneDigit(1,!0):JSBI.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>JSBI.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===JSBI)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return JSBI.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===JSBI}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new JSBI(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,o=new JSBI(g,e);let s=0;const l=g-1;let a=0;for(const i=n(l,t.length);s<i;s++){const i=0-t.__digit(s)-a;a=1&i>>>30,o.__setDigit(s,1073741823&i)}for(;s<l;s++)o.__setDigit(s,0|1073741823&-a);let u=l<t.length?t.__digit(l):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return o.__setDigit(l,h),o.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}JSBI.__kMaxLength=33554432,JSBI.__kMaxLengthBits=JSBI.__kMaxLength<<5,JSBI.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],JSBI.__kBitsPerCharTableShift=5,JSBI.__kBitsPerCharTableMultiplier=1<<JSBI.__kBitsPerCharTableShift,JSBI.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],JSBI.__kBitConversionBuffer=new ArrayBuffer(8),JSBI.__kBitConversionDouble=new Float64Array(JSBI.__kBitConversionBuffer),JSBI.__kBitConversionInts=new Int32Array(JSBI.__kBitConversionBuffer),JSBI.__clz30=Math.clz32?function(i){return Math.clz32(i)-2}:function(i){return 0===i?30:0|29-(0|Math.log(i>>>0)/Math.LN2)},JSBI.__imul=Math.imul||function(i,_){return 0|i*_};export default JSBI;\n//# sourceMappingURL=jsbi.mjs.map\n",null,null,"var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n",null,null,"\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","export const version = \"bignumber/5.5.0\";\n//# sourceMappingURL=_version.js.map","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","export const version = \"address/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,"/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      if (typeof n !== 'string') {\r\n        if (Big.strict === true) {\r\n          throw TypeError(INVALID + 'number');\r\n        }\r\n\r\n        // Minus zero?\r\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n      }\r\n\r\n      parse(x, n);\r\n    }\r\n\r\n    // Retain a reference to this Big constructor.\r\n    // Shadow Big.prototype.constructor which points to Object.\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.strict = STRICT;\r\n  Big.roundDown = 0;\r\n  Big.roundHalfUp = 1;\r\n  Big.roundHalfEven = 2;\r\n  Big.roundUp = 3;\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  if (!NUMERIC.test(n)) {\r\n    throw Error(INVALID + 'number');\r\n  }\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n *\r\n * x {Big} The Big to round.\r\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, sd, rm, more) {\r\n  var xc = x.c;\r\n\r\n  if (rm === UNDEFINED) rm = x.constructor.RM;\r\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  if (sd < 1) {\r\n    more =\r\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n      rm === 1 && xc[0] >= 5 ||\r\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n    );\r\n\r\n    xc.length = 1;\r\n\r\n    if (more) {\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      x.e = x.e - sd + 1;\r\n      xc[0] = 1;\r\n    } else {\r\n\r\n      // Zero.\r\n      xc[0] = x.e = 0;\r\n    }\r\n  } else if (sd < xc.length) {\r\n\r\n    // xc[sd] is the digit after the digit that may be rounded up.\r\n    more =\r\n      rm === 1 && xc[sd] >= 5 ||\r\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n      rm === 3 && (more || !!xc[0]);\r\n\r\n    // Remove any digits after the required precision.\r\n    xc.length = sd--;\r\n\r\n    // Round up?\r\n    if (more) {\r\n\r\n      // Rounding up may mean the previous digit has to be rounded up.\r\n      for (; ++xc[sd] > 9;) {\r\n        xc[sd] = 0;\r\n        if (!sd--) {\r\n          ++x.e;\r\n          xc.unshift(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (sd = xc.length; !xc[--sd];) xc.pop();\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n */\r\nfunction stringify(x, doExponential, isNonzero) {\r\n  var e = x.e,\r\n    s = x.c.join(''),\r\n    n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (doExponential) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) {\r\n      for (e -= n; e--;) s += '0';\r\n    } else if (e < n) {\r\n      s = s.slice(0, e) + '.' + s.slice(e);\r\n    }\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && isNonzero ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n */\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) {\r\n    y.s = k;\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n  q.s = k;\r\n  k = p < 0 ? 0 : p;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n    p--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (yc[0]) {\r\n      y.s = -b;\r\n    } else if (xc[0]) {\r\n      y = new Big(x);\r\n    } else {\r\n      y.s = 1;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var e, k, t,\r\n    x = this,\r\n    Big = x.constructor;\r\n\r\n  y = new Big(y);\r\n\r\n  // Signs differ?\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (!yc[0]) {\r\n      if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = x.s;\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (e = xe - ye) {\r\n    if (e > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      e = -e;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; e--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  e = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (k) {\r\n    xc.unshift(k);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor('1'),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n    throw Error(INVALID + 'exponent');\r\n  }\r\n\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.prec = function (sd, rm) {\r\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n    throw Error(INVALID + 'precision');\r\n  }\r\n  return round(new this.constructor(this), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n * using rounding mode rm, or Big.RM if rm is not specified.\r\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.round = function (dp, rm) {\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n  return round(new this.constructor(this), dp + this.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big('0.5');\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) {\r\n    throw Error(NAME + 'No square root');\r\n  }\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s + '');\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) {\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = b;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), ++dp, rm);\r\n    for (; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, true, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n    // x.e may have changed if the value is rounded up.\r\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, false, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP.toJSON = P.toString = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Big as a primitve number.\r\n */\r\nP.toNumber = function () {\r\n  var n = Number(stringify(this, true, true));\r\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n    throw Error(NAME + 'Imprecise conversion');\r\n  }\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * rounding mode rm, or Big.RM if rm is not specified.\r\n * Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    n = x.c[0];\r\n\r\n  if (sd !== UNDEFINED) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    x = round(new Big(x), sd, rm);\r\n    for (; x.c.length < sd;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  if (Big.strict === true) {\r\n    throw Error(NAME + 'valueOf disallowed');\r\n  }\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\r\nexport default Big;\r\n","/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) module.exports = toFormat;\r\n","/*\r\n *  decimal.js-light v2.5.1\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js-light\r\n *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Expat Licence\r\n */\r\n\r\n\r\n// ------------------------------------  EDITABLE DEFAULTS  ------------------------------------- //\r\n\r\n\r\n// The limit on the value of `precision`, and on the value of the first argument to\r\n// `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\nvar MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  defaults = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n    // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to MAX_E\r\n\r\n    // The natural logarithm of 10.\r\n    // 115 digits\r\n    LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n  },\r\n\r\n\r\n// ------------------------------------ END OF EDITABLE DEFAULTS -------------------------------- //\r\n\r\n\r\n  Decimal,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  ONE,\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n  MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n  // Decimal.prototype object\r\n  P = {};\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue                       abs\r\n *  comparedTo                          cmp\r\n *  decimalPlaces                       dp\r\n *  dividedBy                           div\r\n *  dividedToIntegerBy                  idiv\r\n *  equals                              eq\r\n *  exponent\r\n *  greaterThan                         gt\r\n *  greaterThanOrEqualTo                gte\r\n *  isInteger                           isint\r\n *  isNegative                          isneg\r\n *  isPositive                          ispos\r\n *  isZero\r\n *  lessThan                            lt\r\n *  lessThanOrEqualTo                   lte\r\n *  logarithm                           log\r\n *  minus                               sub\r\n *  modulo                              mod\r\n *  naturalExponential                  exp\r\n *  naturalLogarithm                    ln\r\n *  negated                             neg\r\n *  plus                                add\r\n *  precision                           sd\r\n *  squareRoot                          sqrt\r\n *  times                               mul\r\n *  toDecimalPlaces                     todp\r\n *  toExponential\r\n *  toFixed\r\n *  toInteger                           toint\r\n *  toNumber\r\n *  toPower                             pow\r\n *  toPrecision\r\n *  toSignificantDigits                 tosd\r\n *  toString\r\n *  valueOf                             val\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s) x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this;\r\n\r\n  y = new x.constructor(y);\r\n\r\n  // Signs differ?\r\n  if (x.s !== y.s) return x.s || -y.s;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n  xdL = x.d.length;\r\n  ydL = y.d.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var x = this,\r\n    w = x.d.length - 1,\r\n    dp = (w - x.e) * LOG_BASE;\r\n\r\n  // Subtract the number of trailing zeros of the last word.\r\n  w = x.d[w];\r\n  if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n  return dp < 0 ? 0 : dp;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, truncated to `precision` significant digits.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.idiv = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return !this.cmp(y);\r\n};\r\n\r\n\r\n/*\r\n * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n *\r\n */\r\nP.exponent = function () {\r\n  return getBase10Exponent(this);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  return this.cmp(y) >= 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isint = function () {\r\n  return this.e > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isneg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.ispos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return this.s === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n * `precision` significant digits.\r\n *\r\n * If no base is specified, return log[10](x).\r\n *\r\n * log[base](x) = ln(x) / ln(base)\r\n *\r\n * The maximum error of the result is 1 ulp (unit in the last place).\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var r,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    wpr = pr + 5;\r\n\r\n  // Default base is 10.\r\n  if (base === void 0) {\r\n    base = new Ctor(10);\r\n  } else {\r\n    base = new Ctor(base);\r\n\r\n    // log[-b](x) = NaN\r\n    // log[0](x)  = NaN\r\n    // log[1](x)  = NaN\r\n    if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n  }\r\n\r\n  // log[b](-x) = NaN\r\n  // log[b](0) = -Infinity\r\n  if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n  // log[b](1) = 0\r\n  if (x.eq(ONE)) return new Ctor(0);\r\n\r\n  external = false;\r\n  r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n  external = true;\r\n\r\n  return round(r, pr);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var x = this;\r\n  y = new x.constructor(y);\r\n  return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // x % 0 = NaN\r\n  if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n  // Return x if x is 0.\r\n  if (!x.s) return round(new Ctor(x), pr);\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n  q = divide(x, y, 0, 1).times(y);\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n * significant digits.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return exp(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * truncated to `precision` significant digits.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return ln(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s || 0;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var x = this;\r\n  y = new x.constructor(y);\r\n  return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var e, sd, w,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  e = getBase10Exponent(x) + 1;\r\n  w = x.d.length - 1;\r\n  sd = w * LOG_BASE + 1;\r\n  w = x.d[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n  }\r\n\r\n  return z && e > sd ? e : sd;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n * significant digits.\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var e, n, pr, r, s, t, wpr,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative or zero?\r\n  if (x.s < 1) {\r\n    if (!x.s) return new Ctor(0);\r\n\r\n    // sqrt(-x) = NaN\r\n    throw Error(decimalError + 'NaN');\r\n  }\r\n\r\n  e = getBase10Exponent(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  pr = Ctor.precision;\r\n  s = wpr = pr + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n      n = n.slice(wpr - 3, wpr + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (s == wpr && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        round(t, pr + 1, 0);\r\n\r\n        if (t.times(t).eq(x)) {\r\n          r = t;\r\n          break;\r\n        }\r\n      } else if (n != '9999') {\r\n        break;\r\n      }\r\n\r\n      wpr += 4;\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return round(r, pr);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n * `precision` significant digits.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  // Return 0 if either is 0.\r\n  if (!x.s || !y.s) return new Ctor(0);\r\n\r\n  y.s *= x.s;\r\n  e = x.e + y.e;\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = e;\r\n\r\n  return external ? round(y, Ctor.precision) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.todp = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = toString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = round(new Ctor(x), dp + 1, rm);\r\n    str = toString(x, true, dp + 1);\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) return toString(x);\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n  str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isneg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.toInteger = P.toint = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n * truncated to `precision` significant digits.\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * The maximum error is 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, sign, yIsInt,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    guard = 12,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // pow(x, 0) = 1\r\n  if (!y.s) return new Ctor(ONE);\r\n\r\n  x = new Ctor(x);\r\n\r\n  // pow(0, y > 0) = 0\r\n  // pow(0, y < 0) = Infinity\r\n  if (!x.s) {\r\n    if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n    return x;\r\n  }\r\n\r\n  // pow(1, y) = 1\r\n  if (x.eq(ONE)) return x;\r\n\r\n  pr = Ctor.precision;\r\n\r\n  // pow(x, 1) = x\r\n  if (y.eq(ONE)) return round(x, pr);\r\n\r\n  e = y.e;\r\n  k = y.d.length - 1;\r\n  yIsInt = e >= k;\r\n  sign = x.s;\r\n\r\n  if (!yIsInt) {\r\n\r\n    // pow(x < 0, y non-integer) = NaN\r\n    if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = new Ctor(ONE);\r\n\r\n    // Max k of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (k % 2) {\r\n        r = r.times(x);\r\n        truncate(r.d, e);\r\n      }\r\n\r\n      k = mathfloor(k / 2);\r\n      if (k === 0) break;\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, e);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n  }\r\n\r\n  // Result is negative if x is negative and the last digit of integer y is odd.\r\n  sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n  x.s = 1;\r\n  external = false;\r\n  r = y.times(ln(x, pr + guard));\r\n  external = true;\r\n  r = exp(r);\r\n  r.s = sign;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var e, str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    e = getBase10Exponent(x);\r\n    str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = round(new Ctor(x), sd, rm);\r\n    e = getBase10Exponent(x);\r\n    str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toSignificantDigits = P.tosd = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return round(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = P.valueOf = P.val = P.toJSON = P[Symbol.for('nodejs.util.inspect.custom')] = function () {\r\n  var x = this,\r\n    e = getBase10Exponent(x),\r\n    Ctor = x.constructor;\r\n\r\n  return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  add                 P.minus, P.plus\r\n *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n *  exp                 P.exp, P.pow\r\n *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n *                      P.toString, divide, round, toString, exp, ln\r\n *  getLn10             P.log, ln\r\n *  getZeroString       digitsToString, toString\r\n *  ln                  P.log, P.ln, P.pow, exp\r\n *  parseDecimal        Decimal\r\n *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n *                      divide, getLn10, exp, ln\r\n *  subtract            P.minus, P.plus\r\n *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n *  truncate            P.pow\r\n *\r\n *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n */\r\n\r\n\r\nfunction add(x, y) {\r\n  var carry, d, e, i, k, len, xd, yd,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // If either is zero...\r\n  if (!x.s || !y.s) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!y.s) y = new Ctor(x);\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  k = x.e;\r\n  e = y.e;\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = e;\r\n\r\n  return external ? round(y, pr) : y;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % BASE | 0;\r\n      carry = temp / BASE | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * BASE + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, dp) {\r\n    var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either 0?\r\n    if (!x.s) return new Ctor(x);\r\n    if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n    e = x.e - y.e;\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n    if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n    } else if (dp) {\r\n      sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) return new Ctor(0);\r\n\r\n    // Convert precision in number of base 10 digits to base 1e7 digits.\r\n    sd = sd / LOG_BASE + 2 | 0;\r\n    i = 0;\r\n\r\n    // divisor < 1e7\r\n    if (yL == 1) {\r\n      k = 0;\r\n      yd = yd[0];\r\n      sd++;\r\n\r\n      // k is the carry.\r\n      for (; (i < xL || k) && sd--; i++) {\r\n        t = k * BASE + (xd[i] || 0);\r\n        qd[i] = t / yd | 0;\r\n        k = t % yd | 0;\r\n      }\r\n\r\n    // divisor >= 1e7\r\n    } else {\r\n\r\n      // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n      k = BASE / (yd[0] + 1) | 0;\r\n\r\n      if (k > 1) {\r\n        yd = multiplyInteger(yd, k);\r\n        xd = multiplyInteger(xd, k);\r\n        yL = yd.length;\r\n        xL = xd.length;\r\n      }\r\n\r\n      xi = yL;\r\n      rem = xd.slice(0, yL);\r\n      remL = rem.length;\r\n\r\n      // Add zeros to make remainder as long as divisor.\r\n      for (; remL < yL;) rem[remL++] = 0;\r\n\r\n      yz = yd.slice();\r\n      yz.unshift(0);\r\n      yd0 = yd[0];\r\n\r\n      if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n      do {\r\n        k = 0;\r\n\r\n        // Compare divisor and remainder.\r\n        cmp = compare(yd, rem, yL, remL);\r\n\r\n        // If divisor < remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Calculate trial digit, k.\r\n          rem0 = rem[0];\r\n          if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n          // k will be how many times the divisor goes into the current remainder.\r\n          k = rem0 / yd0 | 0;\r\n\r\n          //  Algorithm:\r\n          //  1. product = divisor * trial digit (k)\r\n          //  2. if product > remainder: product -= divisor, k--\r\n          //  3. remainder -= product\r\n          //  4. if product was < remainder at 2:\r\n          //    5. compare new remainder and divisor\r\n          //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n          if (k > 1) {\r\n            if (k >= BASE) k = BASE - 1;\r\n\r\n            // product = divisor * trial digit.\r\n            prod = multiplyInteger(yd, k);\r\n            prodL = prod.length;\r\n            remL = rem.length;\r\n\r\n            // Compare product and remainder.\r\n            cmp = compare(prod, rem, prodL, remL);\r\n\r\n            // product > remainder.\r\n            if (cmp == 1) {\r\n              k--;\r\n\r\n              // Subtract divisor from product.\r\n              subtract(prod, yL < prodL ? yz : yd, prodL);\r\n            }\r\n          } else {\r\n\r\n            // cmp is -1.\r\n            // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n            // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n            if (k == 0) cmp = k = 1;\r\n            prod = yd.slice();\r\n          }\r\n\r\n          prodL = prod.length;\r\n          if (prodL < remL) prod.unshift(0);\r\n\r\n          // Subtract product from remainder.\r\n          subtract(rem, prod, remL);\r\n\r\n          // If product was < previous remainder.\r\n          if (cmp == -1) {\r\n            remL = rem.length;\r\n\r\n            // Compare divisor and new remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < new remainder, subtract divisor from remainder.\r\n            if (cmp < 1) {\r\n              k++;\r\n\r\n              // Subtract divisor from remainder.\r\n              subtract(rem, yL < remL ? yz : yd, remL);\r\n            }\r\n          }\r\n\r\n          remL = rem.length;\r\n        } else if (cmp === 0) {\r\n          k++;\r\n          rem = [0];\r\n        }    // if cmp === 1, k will be 0\r\n\r\n        // Add the next digit, k, to the result array.\r\n        qd[i++] = k;\r\n\r\n        // Update the remainder.\r\n        if (cmp && rem[0]) {\r\n          rem[remL++] = xd[xi] || 0;\r\n        } else {\r\n          rem = [xd[xi]];\r\n          remL = 1;\r\n        }\r\n\r\n      } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n    }\r\n\r\n    // Leading zero?\r\n    if (!qd[0]) qd.shift();\r\n\r\n    q.e = e;\r\n\r\n    return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n * significant digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n */\r\nfunction exp(x, sd) {\r\n  var denominator, guard, pow, sum, t, wpr,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n  // exp(0) = 1\r\n  if (!x.s) return new Ctor(ONE);\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  while (x.abs().gte(0.1)) {\r\n    x = x.times(t);    // x = x / 2^5\r\n    k += 5;\r\n  }\r\n\r\n  // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(ONE);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = round(pow.times(x), wpr);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      while (k--) sum = round(sum.times(sum), wpr);\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(sum, pr)) : sum;\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(x) {\r\n  var e = x.e * LOG_BASE,\r\n    w = x.d[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for (; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n\r\n  if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(decimalError + 'LN10 precision limit exceeded');\r\n  }\r\n\r\n  return round(new Ctor(Ctor.LN10), sd);\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n * digits.\r\n *\r\n *  ln(n) is non-terminating (n != 1)\r\n *\r\n */\r\nfunction ln(y, sd) {\r\n  var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // ln(-x) = NaN\r\n  // ln(0) = -Infinity\r\n  if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n  // ln(1) = 0\r\n  if (x.eq(ONE)) return new Ctor(0);\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  if (x.eq(10)) {\r\n    if (sd == null) external = true;\r\n    return getLn10(Ctor, wpr);\r\n  }\r\n\r\n  wpr += guard;\r\n  Ctor.precision = wpr;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n  e = getBase10Exponent(x);\r\n\r\n  if (Math.abs(e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n    Ctor.precision = pr;\r\n    return sd == null ? (external = true, round(x, pr)) : x;\r\n  }\r\n\r\n  // x is reduced to a value near 1.\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n  x2 = round(x.times(x), wpr);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = round(numerator.times(x2), wpr);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(sum, pr)) : sum;\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    e = e - i - 1;\r\n    x.e = mathfloor(e / LOG_BASE);\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n  } else {\r\n\r\n    // Zero.\r\n    x.s = 0;\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n */\r\n function round(x, sd, rm) {\r\n  var i, j, k, n, rd, doRound, w, xdi,\r\n    xd = x.d;\r\n\r\n  // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n  // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n  // xdi: the index of w within xd.\r\n  // n: the number of digits of w.\r\n  // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n  // they had leading zeros)\r\n  // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n  // Get the length of the first word of the digits array xd.\r\n  for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n  i = sd - n;\r\n\r\n  // Is the rounding digit in the first word of xd?\r\n  if (i < 0) {\r\n    i += LOG_BASE;\r\n    j = sd;\r\n    w = xd[xdi = 0];\r\n  } else {\r\n    xdi = Math.ceil((i + 1) / LOG_BASE);\r\n    k = xd.length;\r\n    if (xdi >= k) return x;\r\n    w = k = xd[xdi];\r\n\r\n    // Get the number of digits of w.\r\n    for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n    // Get the index of rd within w.\r\n    i %= LOG_BASE;\r\n\r\n    // Get the index of rd within w, adjusted for leading zeros.\r\n    // The number of leading zeros of w is given by LOG_BASE - n.\r\n    j = i - LOG_BASE + n;\r\n  }\r\n\r\n  if (rm !== void 0) {\r\n    k = mathpow(10, n - j - 1);\r\n\r\n    // Get the rounding digit at index j of w.\r\n    rd = w / k % 10 | 0;\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n    // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n    // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n    // 714.\r\n\r\n    doRound = rm < 4\r\n      ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n  }\r\n\r\n  if (sd < 1 || !xd[0]) {\r\n    if (doRound) {\r\n      k = getBase10Exponent(x);\r\n      xd.length = 1;\r\n\r\n      // Convert sd to decimal places.\r\n      sd = sd - k - 1;\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n      x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n    } else {\r\n      xd.length = 1;\r\n\r\n      // Zero.\r\n      xd[0] = x.e = x.s = 0;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  // Remove excess digits.\r\n  if (i == 0) {\r\n    xd.length = xdi;\r\n    k = 1;\r\n    xdi--;\r\n  } else {\r\n    xd.length = xdi + 1;\r\n    k = mathpow(10, LOG_BASE - i);\r\n\r\n    // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n    // j > 0 means i > number of leading zeros of w.\r\n    xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n  }\r\n\r\n  if (doRound) {\r\n    for (;;) {\r\n\r\n      // Is the digit to be rounded up in the first word of xd?\r\n      if (xdi == 0) {\r\n        if ((xd[0] += k) == BASE) {\r\n          xd[0] = 1;\r\n          ++x.e;\r\n        }\r\n\r\n        break;\r\n      } else {\r\n        xd[xdi] += k;\r\n        if (xd[xdi] != BASE) break;\r\n        xd[xdi--] = 0;\r\n        k = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n  if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n    throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction subtract(x, y) {\r\n  var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision;\r\n\r\n  // Return y negated if x is zero.\r\n  // Return x if y is zero and x is non-zero.\r\n  if (!x.s || !y.s) {\r\n    if (y.s) y.s = -y.s;\r\n    else y = new Ctor(x);\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n\r\n  // x and y are non-zero numbers with the same sign.\r\n\r\n  e = y.e;\r\n  xe = x.e;\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of zeros\r\n    // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n    // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to xd if shorter.\r\n  // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(0);\r\n\r\n  y.d = xd;\r\n  y.e = e;\r\n\r\n  //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n  return external ? round(y, pr) : y;\r\n}\r\n\r\n\r\nfunction toString(x, isExp, sd) {\r\n  var k,\r\n    e = getBase10Exponent(x),\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (e < 0 ? 'e' : 'e+') + e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  clone\r\n *  config/set\r\n */\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * value {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(value) {\r\n    var x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (value instanceof Decimal) {\r\n      x.s = value.s;\r\n      x.e = value.e;\r\n      x.d = (value = value.d) ? value.slice() : value;\r\n      return;\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n\r\n      // Reject Infinity/NaN.\r\n      if (value * 0 !== 0) {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      if (value > 0) {\r\n        x.s = 1;\r\n      } else if (value < 0) {\r\n        value = -value;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 0;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (value === ~~value && value < 1e7) {\r\n        x.e = 0;\r\n        x.d = [value];\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, value.toString());\r\n    } else if (typeof value !== 'string') {\r\n      throw Error(invalidArgument + value);\r\n    }\r\n\r\n    // Minus sign?\r\n    if (value.charCodeAt(0) === 45) {\r\n      value = value.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      x.s = 1;\r\n    }\r\n\r\n    if (isDecimal.test(value)) parseDecimal(x, value);\r\n    else throw Error(invalidArgument + value);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n  Decimal.clone = clone;\r\n  Decimal.config = Decimal.set = config;\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n    for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    throw Error(decimalError + 'Object expected');\r\n  }\r\n  var i, p, v,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -1 / 0, 0,\r\n      'toExpPos', 0, 1 / 0\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if ((v = obj[p = ps[i]]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if ((v = obj[p = 'LN10']) !== void 0) {\r\n      if (v == Math.LN10) this[p] = new this(v);\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = clone(defaults);\r\n\r\n// Internal constant.\r\nONE = new Decimal(1);\r\n\r\nexport default Decimal;\r\n",null,null,null,null,"export const version = \"strings/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,null,null,null,null,null],"names":["JSBI","Array","constructor","i","_","super","this","sign","Object","setPrototypeOf","prototype","__kMaxLength","RangeError","static","Math","floor","t","Number","isFinite","__zero","__isOneDigitInt","__oneDigit","__fromDouble","__fromString","SyntaxError","__toPrimitive","BigInt","TypeError","toDebugString","push","toString","join","length","__toStringBasePowerOfTwo","__toStringGeneric","valueOf","Error","__unsignedDigit","__digit","e","__clz30","n","Infinity","g","o","s","l","r","a","u","d","h","__decideRounding","m","__kBitConversionInts","__kBitConversionDouble","__copy","__absoluteSubOne","__trim","__absoluteAddOne","unaryMinus","__kMaxLengthBits","__initializeDigits","__setDigit","multiply","__clzmsd","__multiplyAccumulate","__absoluteCompare","__absoluteDivSmall","__absoluteDivLarge","__absoluteModSmall","__absoluteAdd","__absoluteSub","__rightShiftByAbsolute","__leftShiftByAbsolute","__compareToBigInt","equal","max","__absoluteAnd","__absoluteOr","__absoluteAndNot","__absoluteXor","__truncateToNBits","__truncateAndSubFromPowerOfTwo","__toNumeric","__isBigInt","add","__compare","EQ","__equalToNumber","pop","charCodeAt","__isWhitespace","__kMaxBitsPerChar","__kBitsPerCharTableMultiplier","__kBitsPerCharTableShift","__fillFromParts","b","D","__inplaceMultiplyAdd","__kConversionChars","exponentiate","__halfDigit","__setHalfDigit","quotient","remainder","__unequalSign","__absoluteGreater","__absoluteLess","abs","__compareToDouble","__comparisonResultToBool","__compareToNumber","__setDigitGrow","__imul","__halfDigitLength","__clz15","__specialLeftShift","__internalMultiplyAdd","__inplaceSub","__inplaceAdd","__inplaceRightShift","__toShiftAmount","__rightShiftByMaximum","Symbol","toPrimitive","call","min","SupportedChainId","__kBitConversionBuffer","ArrayBuffer","Float64Array","Int32Array","clz32","log","LN2","imul","MINIMUM_LIQUIDITY","ZERO","ONE","FIVE","_997","_1000","TradeType","Rounding","MaxUint256","INIT_CODE_HASH","MAINNET","ROPSTEN","RINKEBY","KOVAN","SMART_CHAIN","MUMBAI","FACTORY_ADDRESS","ROUTER_ADDRESS","MULTICALL2_ADDRESS","ENS_REGISTRAR_ADDRESS","isProduction","process","env","NODE_ENV","prefix","invariant","condition","message","provided","BaseCurrency","chainId","decimals","symbol","name","isSafeInteger","isInteger","NativeCurrency","_permanentCensorErrors","_censorErrors","LogLevels","debug","default","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","String","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","assert","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","censorship","permanent","globalLogger","logger","isHexable","addSlice","array","slice","arguments","isBytes","v","arrayify","options","result","unshift","parseInt","allowMissingPrefix","substring","toHexString","isHexString","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","zeroPad","match","hexlify","hexDataLength","data","module","exports","val","msg","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","parseHexByte","lowerBound","parseBase","str","start","end","mul","len","num","isArray","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","_constructorGuard","_warnedToStringRadix","BigNumber","constructorGuard","_hex","_isBigNumber","freeze","toBigNumber","toBN","from","other","throwFault","isNegative","shr","toBigInt","type","toHex","anyValue","INPUT_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","obj","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","create","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","f","encode","bytes","encodeString","strs","paddingBytes","finalize","arrayBuffer","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","sha3","keccak_256","getChecksumAddress","address","chars","expanded","hashed","toUpperCase","ibanLookup","safeDigits","log10","LN10","getAddress","checksum","ibanChecksum","getCreate2Address","salt","initCodeHash","endOffset","validateAndParseAddress","Token","equals","isToken","sortsBefore","wrapped","WETH9","Ether","weth9","_etherCache","isNative","NAME","INVALID","INVALID_DP","P","NUMERIC","sd","rm","more","xc","RM","doExponential","isNonzero","charAt","isneg","yc","Big","dp","DP","bl","bt","ri","bz","ai","al","rl","qc","qi","minus","xlty","plus","xe","ye","reverse","ygtx","times","prec","toExponential","indexOf","toFixed","NE","PE","strict","toPrecision","_Big_","nl","test","search","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","Ctor","toFormat","fmt","arr","g1","g2","nd","intd","intp","fracp","dsep","gsep","gsize","sgsize","fgsep","fgsize","tfmt","format","cfmt","decimalSeparator","groupSeparator","secondaryGroupSize","substr","fractionGroupSeparator","fractionGroupSize","RegExp","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","mathpow","isDecimal","BASE","MAX_E","MAX_SAFE_INTEGER","xd","yd","pr","precision","checkInt32","digitsToString","indexOfLastWord","getZeroString","absoluteValue","comparedTo","xdL","ydL","decimalPlaces","dividedBy","divide","dividedToIntegerBy","idiv","exponent","getBase10Exponent","greaterThan","greaterThanOrEqualTo","isint","isPositive","ispos","lessThan","lessThanOrEqualTo","logarithm","wpr","ln","subtract","modulo","naturalExponential","exp","naturalLogarithm","negated","squareRoot","rL","toDecimalPlaces","todp","rounding","toInteger","toint","toPower","yIsInt","yn","truncate","toExpNeg","toExpPos","toSignificantDigits","tosd","for","multiplyInteger","temp","compare","aL","bL","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","denominator","sum","getLn10","zs","numerator","parseDecimal","rd","doRound","xdi","xLTy","isExp","config","ps","Decimal","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","hasOwnProperty","_Big","toSignificantRounding","toFixedRounding","Fraction","fractionish","invert","otherParsed","tryParseFraction","equalTo","toSignificant","significantDigits","asFraction","CurrencyAmount","currency","lessThanOrEqual","decimalScale","rawAmount","added","fromFractionalAmount","subtracted","multiplied","divided","toExact","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","ignore","OVERLONG","regexBytes","regexNumber","regexArray","_pack","pair","toUtf8Bytes","baseType","pack","types","values","tight","CAN_SET_PROTOTYPE","InsufficientReservesError","InsufficientInputAmountError","TWO","greaterThanOrEqual","computePairAddress","factoryAddress","tokenA","tokenB","token0","token1","hashKeccak256","Pair","currencyAmountA","currencyAmountB","tokenAmounts","liquidityToken","getLiquidityToken","involvesToken","token","token0Price","token1Price","priceOf","reserve0","reserve1","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","fromRawAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","pairs","every","wrappedInput","path","entries","currentInput","midPrice","_midPrice","prices","reduced","accumulator","currentValue","computePriceImpact","quotedOutputAmount","priceImpact","sortedInsert","maxSize","comparator","isFull","splice","inputOutputComparator","tradeComparator","ioComp","route","Trade","amount","tradeType","EXACT_INPUT","executionPrice","amountIn","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","currencyAmountIn","currencyOut","maxNumResults","maxHops","currentPairs","nextAmountIn","bestTrades","tokenOut","pairsExcludingThisPair","bestTradeExactIn","worstExecutionPrice","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","bestTradeExactOut","WMATIC","trade","etherIn","etherOut","ttl","to","recipient","allowedSlippage","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer"],"mappings":"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"}