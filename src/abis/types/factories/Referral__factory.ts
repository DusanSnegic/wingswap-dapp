/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Referral, ReferralInterface } from "../Referral";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setMarketingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_divisor",
        type: "uint256",
      },
    ],
    name: "setRefFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "markeingAddress",
        type: "address",
      },
    ],
    name: "SetMarketingAddress",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referralAddr",
        type: "address",
      },
    ],
    name: "setReferral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "divisor",
        type: "uint256",
      },
    ],
    name: "SetRefFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referralAddr",
        type: "address",
      },
    ],
    name: "SetReferral",
    type: "event",
  },
  {
    inputs: [],
    name: "getMarketingAddress",
    outputs: [
      {
        internalType: "address",
        name: "_marketingAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getReferral",
    outputs: [
      {
        internalType: "address",
        name: "refAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRefFee",
    outputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_divisor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refFee",
    outputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "divisor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "refInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Referral__factory {
  static readonly abi = _abi;
  static createInterface(): ReferralInterface {
    return new utils.Interface(_abi) as ReferralInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Referral {
    return new Contract(address, _abi, signerOrProvider) as Referral;
  }
}
